class groot : merchant
{
property:
    BuySellList SellList0 = {
        {"sb_aqua_swirl1"; 10};
        {"sb_arcane_acumen1"; 10};
        {"sb_aura_burn1"; 10};
        {"sb_blaze1"; 10};
        {"sb_charm11"; 10};
        {"sb_concentration1"; 10};
        {"sb_disrupt_undead1"; 10};
        {"sb_inspire_life_force1"; 10};
        {"sb_poison_recovery1"; 10};
        {"sb_poison1"; 10};
        {"sb_resurrection1"; 10};
        {"sb_servitor_heal1"; 10};
        {"sb_summon_blackcat1"; 10};
        {"sb_twister1"; 10};
        {"sb_water_breathing"; 10};
        {"sb_summon_shadow1"; 10};
        {"sb_summon_unicorn_boxer1"; 10};
        {"sb_summon_silhouette1"; 10};
        {"sb_confusion1"; 10};
        {"sb_cure_bleeding1"; 10};
        {"sb_agility1"; 10};
        {"sb_body_to_mind1"; 10};
        {"sb_dryad_root1"; 10};
        {"sb_empower1"; 10};
        {"sb_focus1"; 10};
        {"sb_holy_weapon1"; 10};
        {"sb_mental_shield1"; 10};
        {"sb_poison_cloud1"; 10};
        {"sb_servitor_mana_charge1"; 10};
        {"sb_surrender_to_earth1"; 10};
        {"sb_surrender_to_fire1"; 10};
        {"sb_surrender_to_poison1"; 10};
        {"sb_summon_cuti_cat1"; 10};
        {"sb_summon_unicorn_mirage1"; 10};
        {"sb_summon_mechanic_golem1"; 10};
        {"sb_touch_of_god1"; 10};
        {"sb_corpse_life_drain1"; 10};
        {"sb_fire_resist1"; 10};
        {"sb_recharge1"; 10};
        {"sb_sleep1"; 10};
        {"sb_auqa_resist1"; 10};
        {"sb_decrease_weight1"; 10};
        {"sb_berserker_spirit1"; 10};
        {"sb_bright_servitor1"; 10};
        {"sb_curse_bleary1"; 10};
        {"sb_erase_hostility1"; 10};
        {"sb_fast_servitor1"; 10};
        {"sb_mighty_servitor1"; 10};
        {"sb_regeneration1"; 10};
        {"sb_resist_poison1"; 10};
        {"sb_slow1"; 10};
        {"sb_wind_resist1"; 10};
        {"sb_freezing_strike1"; 10};
        {"sb_power_break1"; 10};
        {"sb_speed_walk1"; 10};
        {"sb_zero_g1"; 10};
        {"sb_blaze_quake1"; 10};
        {"sb_burning_spirit1"; 10};
        {"sb_devotioin_of_soul1"; 10};
        {"sb_entice_madness1"; 10};
        {"sb_pain_edge1"; 10};
        {"sb_aura_sway1"; 10};
        {"sb_bind_will1"; 10};
        {"sb_eternal_flame1"; 10};
        {"sb_engrave_seal_of_timid1"; 10};
        {"sb_power_of_paagrio1"; 10};
        {"sb_pure_inspiration1"; 10};
        {"sb_blessing_of_paagrio1"; 10};
        {"sb_engrave_seal_of_lazy1"; 10}
    };
    BuySellList SellList1 = {
        {"wooden_arrow"; 10};
        {"bone_arrow"; 10};
        {"mage_staff"; 10};
        {"crucifix_of_blessing"; 10};
        {"voodoo_doll"; 10};
        {"bone_staff"; 10};
        {"scroll_of_wisdom"; 10};
        {"branch_of_life"; 10};
        {"proof_of_revenge"; 10};
        {"doom_hammer"; 10};
        {"mystic_staff"; 10};
        {"staff_of_mana"; 10};
        {"divine_tome"; 10};
        {"sword_of_magic"; 10};
        {"sword_of_mystic"; 10};
        {"sword_of_occult"; 10};
        {"dagger_of_mana"; 10};
        {"mystic_knife"; 10};
        {"conjure_knife"; 10};
        {"hose_of_magicpower"; 10};
        {"tunic_of_magicpower"; 10};
        {"cursed_hose"; 10};
        {"cursed_tunic"; 10};
        {"dark_hose"; 10}
    };
    
handler:
    EventHandler TALK_SELECTED(talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @ascalons_letter2))
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Show Letter from Ascalon");
            }

            if (HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @white_rose_insignia) && (OwnItemCount(talker, @harpys_egg1) < 30 || OwnItemCount(talker, @medusa_venom1) < 30 || OwnItemCount(talker, @windsus_bile1) < 30))
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Ask what the required ingredients are");
            }

            if (HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @white_rose_insignia) && OwnItemCount(talker, @harpys_egg1) >= 30 && OwnItemCount(talker, @medusa_venom1) >= 30 && OwnItemCount(talker, @windsus_bile1) >= 30)
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Give ingredients needed for making antidote");
            }

            if (HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @groots_letter))
            {
                _choiceN = _choiceN + 1;
                _code = 3;
                AddChoice(3, "Bid farewell");
            }

            if (HaveMemo(talker, @test_of_champion) == 1 && (OwnItemCount(talker, @ascalons_letter3) || OwnItemCount(talker, @mouens_order1) || OwnItemCount(talker, @mouens_order2) || OwnItemCount(talker, @mouens_letter)))
            {
                _choiceN = _choiceN + 1;
                _code = 4;
                AddChoice(4, "Ask if the other person is doing well");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @ascalons_letter2))
                {
                    ShowPage(talker, "groot_q0223_01.htm");
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @white_rose_insignia) && (OwnItemCount(talker, @harpys_egg1) < 30 || OwnItemCount(talker, @medusa_venom1) < 30 || OwnItemCount(talker, @windsus_bile1) < 30))
                {
                    ShowPage(talker, "groot_q0223_03.htm");
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @white_rose_insignia) && OwnItemCount(talker, @harpys_egg1) >= 30 && OwnItemCount(talker, @medusa_venom1) >= 30 && OwnItemCount(talker, @windsus_bile1) >= 30)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "groot_q0223_04.htm");
                        GiveItem1(talker, @groots_letter, 1);
                        DeleteItem1(talker, @white_rose_insignia, 1);
                        DeleteItem1(talker, @harpys_egg1, OwnItemCount(talker, @harpys_egg1));
                        DeleteItem1(talker, @medusa_venom1, OwnItemCount(talker, @medusa_venom1));
                        DeleteItem1(talker, @windsus_bile1, OwnItemCount(talker, @windsus_bile1));
                    }
                }

                break;
            case 3:
                if (_from_choice == 0 || HaveMemo(talker, @test_of_champion) == 1 && OwnItemCount(talker, @groots_letter))
                {
                    ShowPage(talker, "groot_q0223_05.htm");
                }

                break;
            case 4:
                if (_from_choice == 0 || HaveMemo(talker, @test_of_champion) == 1 && (OwnItemCount(talker, @ascalons_letter3) || OwnItemCount(talker, @mouens_order1) || OwnItemCount(talker, @mouens_order2) || OwnItemCount(talker, @mouens_letter)))
                {
                    ShowPage(talker, "groot_q0223_06.htm");
                }

                break;
            }

            return;
        }

        super;
    }

    EventHandler MENU_SELECTED(ask, reply, talker)
    {
        if (ask == @test_of_champion)
        {
            if (reply == 1 && OwnItemCount(talker, @ascalons_letter2) > 0)
            {
                if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                {
                    talker.quest_last_reward_time = GetCurrentTick();
                    ShowPage(talker, "groot_q0223_02.htm");
                    GiveItem1(talker, @white_rose_insignia, 1);
                    DeleteItem1(talker, @ascalons_letter2, 1);
                }
            }
        }

        super;
    }
}

class trader_chali : merchant
{
property:
    BuySellList SellList0 = {
        {"small_sword"; 15};
        {"club"; 15};
        {"bone_dagger"; 15};
        {"short_bow"; 15};
        {"broad_sword"; 15};
        {"heavy_chisel"; 15};
        {"knife"; 15};
        {"doomed_dagger"; 15};
        {"bow"; 15};
        {"mace"; 15};
        {"sickle"; 15};
        {"brandish"; 15};
        {"gladius"; 15};
        {"orcish_sword"; 15};
        {"handmade_sword"; 15};
        {"dwarven_mace"; 15};
        {"dirk"; 15};
        {"hunting_bow"; 15};
        {"long_sword"; 15};
        {"throw_knife"; 15};
        {"bow_of_forest"; 15};
        {"short_spear"; 15};
        {"pants"; 15};
        {"shirt"; 15};
        {"leather_pants"; 15};
        {"leather_shirt"; 15};
        {"hard_leather_pants"; 15};
        {"wooden_gaiters"; 15};
        {"wooden_breastplate"; 15};
        {"tights_pants"; 15};
        {"tights_shirt"; 15};
        {"bone_breastplate"; 15};
        {"bone_gaiters"; 15};
        {"leather_shield"; 15};
        {"small_shield"; 15};
        {"buckler"; 15};
        {"round_shield"; 15};
        {"short_gloves"; 15};
        {"short_leather_gloves"; 15};
        {"gloves"; 15};
        {"leather_gloves"; 15};
        {"apprentice's_shoes"; 15};
        {"cloth_shoes"; 15};
        {"leather_sandals"; 15};
        {"crude_leather_shoes"; 15};
        {"cotton_shoes"; 15};
        {"leather_shoes"; 15};
        {"low_boots"; 15};
        {"cloth_cap"; 15};
        {"leather_cap"; 15};
        {"wooden_helmet"; 15};
        {"leather_helmet"; 15};
        {"wooden_arrow"; 15};
        {"bone_arrow"; 15}
    };
    BuySellList SellList1 = {
        {"apprentice's_rod"; 15};
        {"buffalo_horn"; 15};
        {"willow_staff"; 15};
        {"apprentice's_spellbook"; 15};
        {"cedar_staff"; 15};
        {"apprentice's_staff"; 15};
        {"relic_of_saints"; 15};
        {"hose"; 15};
        {"tunic"; 15};
        {"cotton_hose"; 15};
        {"cotton_tunic"; 15};
        {"feriotic_hose"; 15};
        {"feriotic_tunic"; 15};
        {"leather_hose"; 15};
        {"leather_tunic"; 15};
        {"hose_of_devotion"; 15};
        {"tunic_of_devotion"; 15};
        {"leather_shield"; 15};
        {"small_shield"; 15};
        {"buckler"; 15};
        {"round_shield"; 15};
        {"short_gloves"; 15};
        {"short_leather_gloves"; 15};
        {"gloves"; 15};
        {"leather_gloves"; 15};
        {"apprentice's_shoes"; 15};
        {"cloth_shoes"; 15};
        {"leather_sandals"; 15};
        {"crude_leather_shoes"; 15};
        {"cotton_shoes"; 15};
        {"leather_shoes"; 15};
        {"low_boots"; 15};
        {"cloth_cap"; 15};
        {"leather_cap"; 15};
        {"wooden_helmet"; 15};
        {"leather_helmet"; 15};
        {"wooden_arrow"; 15};
        {"bone_arrow"; 15}
    };
    
handler:
    EventHandler TALK_SELECTED(fhtml0, talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_axe) == 1 && talker.flag < 20)
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Give Charly's axe");
            }

            if (HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_axe) == 1 && talker.flag >= 20)
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Give Charly's axe");
            }

            if (HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_pay) == 1)
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Ask about item's price");
            }

            if (HaveMemo(talker, @miners_favor) && OwnItemCount(talker, @bolters_list) && OwnItemCount(talker, @boomboom_powder) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 3;
                AddChoice(3, "Say you were sent by Bolter");
            }

            if (HaveMemo(talker, @miners_favor) && OwnItemCount(talker, @bolters_list) && OwnItemCount(talker, @boomboom_powder))
            {
                _choiceN = _choiceN + 1;
                _code = 4;
                AddChoice(4, "Ask about boomboom powder");
            }

            if (HaveMemo(talker, @testimony_of_prosperity) == 1 && OwnItemCount(talker, @receipt_of_contribution1) == 0 && OwnItemCount(talker, @contribution_of_chali) == 0 && OwnItemCount(talker, @lockirins_notice1) == 0 && OwnItemCount(talker, @ring_of_testimony1) >= 1 && OwnItemCount(talker, @collection_license) >= 1)
            {
                _choiceN = _choiceN + 1;
                _code = 5;
                AddChoice(5, "Ask for donation");
            }

            if (HaveMemo(talker, @testimony_of_prosperity) == 1 && OwnItemCount(talker, @ring_of_testimony1) >= 1 && OwnItemCount(talker, @collection_license) >= 1 && OwnItemCount(talker, @contribution_of_chali) >= 1 && OwnItemCount(talker, @lockirins_notice1) == 0 && OwnItemCount(talker, @receipt_of_contribution1) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 6;
                AddChoice(6, "Say that you are thankful for the other person giving the donation");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_axe) == 1 && talker.flag < 20)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "trader_chali_q0417_01.htm");
                        DeleteItem1(talker, @chalis_axe, 1);
                        GiveItem1(talker, @chalis_pay, 1);
                        talker.flag = talker.flag + 10;
                    }
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_axe) == 1 && talker.flag >= 20)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        SetMemoState(talker, @path_to_scavenger, 1);
                        ShowPage(talker, "trader_chali_q0417_02.htm");
                        DeleteItem1(talker, @chalis_axe, 1);
                        GiveItem1(talker, @chalis_pay, 1);
                        talker.flag = talker.flag + 10;
                    }
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_scavenger) == 1 && OwnItemCount(talker, @chalis_pay) == 1)
                {
                    ShowPage(talker, "trader_chali_q0417_03.htm");
                }

                break;
            case 3:
                if (_from_choice == 0 || HaveMemo(talker, @miners_favor) && OwnItemCount(talker, @bolters_list) && OwnItemCount(talker, @boomboom_powder) == 0)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "trader_chali_q0005_01.htm");
                        GiveItem1(talker, @boomboom_powder, 1);
                    }
                }

                break;
            case 4:
                if (_from_choice == 0 || HaveMemo(talker, @miners_favor) && OwnItemCount(talker, @bolters_list) && OwnItemCount(talker, @boomboom_powder))
                {
                    ShowPage(talker, "trader_chali_q0005_02.htm");
                }

                break;
            case 5:
                if (_from_choice == 0 || HaveMemo(talker, @testimony_of_prosperity) == 1 && OwnItemCount(talker, @receipt_of_contribution1) == 0 && OwnItemCount(talker, @contribution_of_chali) == 0 && OwnItemCount(talker, @lockirins_notice1) == 0 && OwnItemCount(talker, @ring_of_testimony1) >= 1 && OwnItemCount(talker, @collection_license) >= 1)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "trader_chali_q0221_01.htm");
                        GiveItem1(talker, @contribution_of_chali, 1);
                    }
                }

                break;
            case 6:
                if (_from_choice == 0 || HaveMemo(talker, @testimony_of_prosperity) == 1 && OwnItemCount(talker, @ring_of_testimony1) >= 1 && OwnItemCount(talker, @collection_license) >= 1 && OwnItemCount(talker, @contribution_of_chali) >= 1 && OwnItemCount(talker, @lockirins_notice1) == 0 && OwnItemCount(talker, @receipt_of_contribution1) == 0)
                {
                    ShowPage(talker, "trader_chali_q0221_02.htm");
                }

                break;
            }

            return;
        }

        super;
    }
}

class katrine : merchant
{
property:
    BuySellList SellList0 = {
        {"sb_adv_defence_power1"; 15};
        {"sb_advanced_attack_power1"; 15};
        {"sb_battle_heal1"; 15};
        {"sb_heal1"; 15};
        {"sb_ice_bolt1"; 15};
        {"sb_might1"; 15};
        {"sb_vampiric_touch1"; 15};
        {"sb_breeze1"; 15};
        {"sb_cure_poison1"; 15};
        {"sb_curse_poison1"; 15};
        {"sb_curse_weakness"; 15};
        {"sb_flame_strike1"; 15};
        {"sb_group_heal1"; 15};
        {"sb_shield1"; 15};
        {"sb_wind_walk1"; 15};
        {"sb_drain_energy1"; 15};
        {"sb_elemental_heal1"; 15};
        {"sb_aqua_swirl1"; 15};
        {"sb_arcane_acumen1"; 15};
        {"sb_aura_burn1"; 15};
        {"sb_blaze1"; 15};
        {"sb_charm11"; 15};
        {"sb_concentration1"; 15};
        {"sb_disrupt_undead1"; 15};
        {"sb_poison_recovery1"; 15};
        {"sb_poison1"; 15};
        {"sb_resurrection1"; 15};
        {"sb_servitor_heal1"; 15};
        {"sb_summon_blackcat1"; 15};
        {"sb_twister1"; 15};
        {"sb_water_breathing"; 15}
    };
    
handler:
    EventHandler TALK_SELECTED(fhtml0, talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(talker, @crystal_of_fireice) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Hear the request of Katerina");
            }

            if (HaveMemo(talker, @crystal_of_fireice) == 1 && OwnItemCount(talker, @flame_shard) == 0 && OwnItemCount(talker, @ice_shard) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Executing Katerina's request");
            }

            if (HaveMemo(talker, @crystal_of_fireice) == 1 && (OwnItemCount(talker, @flame_shard) > 0 || OwnItemCount(talker, @ice_shard) > 0))
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Executing Katerina's request");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(talker, @crystal_of_fireice) == 0)
                {
                    if (GetMemoCount(talker) < 16)
                    {
                        if (talker.level >= 17)
                        {
                            FHTML_SetFileName(fhtml0, "katrine_q0306_03.htm");
                            FHTML_SetInt(fhtml0, "quest_id", @crystal_of_fireice);
                            ShowFHTML(talker, fhtml0);
                        }
                        else
                        {
                            ShowPage(talker, "katrine_q0306_02.htm");
                        }
                    }
                    else
                    {
                        ShowPage(talker, "fullquest.htm");
                    }
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @crystal_of_fireice) == 1 && OwnItemCount(talker, @flame_shard) == 0 && OwnItemCount(talker, @ice_shard) == 0)
                {
                    ShowPage(talker, "katrine_q0306_05.htm");
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @crystal_of_fireice) == 1 && (OwnItemCount(talker, @flame_shard) > 0 || OwnItemCount(talker, @ice_shard) > 0))
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        GiveItem1(talker, @adena, 60 * OwnItemCount(talker, @flame_shard) + 60 * OwnItemCount(talker, @ice_shard));
                        DeleteItem1(talker, @flame_shard, OwnItemCount(talker, @flame_shard));
                        DeleteItem1(talker, @ice_shard, OwnItemCount(talker, @ice_shard));
                        ShowPage(talker, "katrine_q0306_07.htm");
                    }
                }

                break;
            }

            return;
        }

        super;
    }

    EventHandler QUEST_ACCEPTED(quest_id, talker)
    {
        if (quest_id == @crystal_of_fireice)
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                SetMemo(talker, quest_id);
                ShowPage(talker, "katrine_q0306_04.htm");
                SoundEffect(talker, "ItemSound.quest_accept");
            }

            return;
        }

        super;
    }

    EventHandler MENU_SELECTED(ask, reply, talker)
    {
        if (ask == @crystal_of_fireice)
        {
            if (reply == 2)
            {
                RemoveMemo(talker, @crystal_of_fireice);
                SoundEffect(talker, "ItemSound.quest_finish");
                ShowPage(talker, "katrine_q0306_08.htm");
            }
        }

        super;
    }
}

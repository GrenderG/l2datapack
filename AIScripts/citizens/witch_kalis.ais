class witch_kalis : citizen
{
handler:
    EventHandler TALK_SELECTED(fhtml0, i0, talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(Pledge_GetLeader(talker), @pledge_seeks_ambition) == 1)
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Ask about fate");
            }

            if (HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 1 && OwnItemCount(talker, @q_symbol_of_loyalty) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Say that you came because you were sent by Sir Rodemai");
            }

            if (HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 2 && OwnItemCount(talker, @q_symbol_of_loyalty) < 3)
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Report the test results");
            }

            if (HaveMemo(talker, @pledge_of_blood) == 1 && OwnItemCount(talker, @q_symbol_of_loyalty) >= 3 && GetAbnormalLevel(talker, @ab_fatal_poison) == -1)
            {
                _choiceN = _choiceN + 1;
                _code = 3;
                AddChoice(3, "Report the test results");
            }

            if (HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 5 && OwnItemCount(talker, @q_blood_of_eva) == 1 && OwnItemCount(talker, @q_herb_of_vanor) >= 1 && OwnItemCount(talker, @q_herb_of_breka) >= 1 && OwnItemCount(talker, @q_herb_of_oel_mahum) >= 1 && GetAbnormalLevel(talker, @ab_fatal_poison) == 1)
            {
                _choiceN = _choiceN + 1;
                _code = 4;
                AddChoice(4, "Report the test results");
            }

            if (HaveMemo(talker, @pledge_of_blood) == 1 && (GetMemoState(talker, @pledge_of_blood) == 3 || GetMemoState(talker, @pledge_of_blood) == 4 || GetMemoState(talker, @pledge_of_blood) == 5) && GetAbnormalLevel(talker, @ab_fatal_poison) == -1)
            {
                _choiceN = _choiceN + 1;
                _code = 5;
                AddChoice(5, "Report the test results");
            }

            if (HaveMemo(talker, @pledge_of_blood) && GetMemoState(talker, @pledge_of_blood) < 6 && GetMemoState(talker, @pledge_of_blood) >= 3 && (OwnItemCount(talker, @q_blood_of_eva) == 0 || OwnItemCount(talker, @q_herb_of_vanor) == 0 || OwnItemCount(talker, @q_herb_of_breka) == 0 || OwnItemCount(talker, @q_herb_of_oel_mahum) == 0) && GetAbnormalLevel(talker, @ab_fatal_poison) == 1)
            {
                _choiceN = _choiceN + 1;
                _code = 6;
                AddChoice(6, "Talk about the test");
            }

            if (HaveMemo(talker, @pledge_of_blood) && GetMemoState(talker, @pledge_of_blood) == 6)
            {
                _choiceN = _choiceN + 1;
                _code = 7;
                AddChoice(7, "Talk about the test");
            }

            if (HaveMemo(Pledge_GetLeader(talker), @pledge_of_blood) && HaveMemo(talker, @pledge_of_blood) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 8;
                AddChoice(8, "Talk about the test");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(Pledge_GetLeader(talker), @pledge_seeks_ambition) == 1)
                {
                    ShowPage(talker, "witch_kalis_q0503_01.htm");
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 1 && OwnItemCount(talker, @q_symbol_of_loyalty) == 0)
                {
                    ShowPage(talker, "witch_kalis_q0501_01.htm");
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 2 && OwnItemCount(talker, @q_symbol_of_loyalty) < 3)
                {
                    ShowPage(talker, "witch_kalis_q0501_05.htm");
                }

                break;
            case 3:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) == 1 && OwnItemCount(talker, @q_symbol_of_loyalty) >= 3 && GetAbnormalLevel(talker, @ab_fatal_poison) == -1)
                {
                    i0 = GetAbnormalLevel(talker, @ab_fatal_poison);
                    ShowPage(talker, "witch_kalis_q0501_06.htm");
                }

                break;
            case 4:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) == 1 && GetMemoState(talker, @pledge_of_blood) == 5 && OwnItemCount(talker, @q_blood_of_eva) == 1 && OwnItemCount(talker, @q_herb_of_vanor) >= 1 && OwnItemCount(talker, @q_herb_of_breka) >= 1 && OwnItemCount(talker, @q_herb_of_oel_mahum) >= 1 && GetAbnormalLevel(talker, @ab_fatal_poison) == 1)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "witch_kalis_q0501_08.htm");
                        GiveItem1(talker, @q_voucher_of_faith, 1);
                        GiveItem1(talker, @q_potion_of_recovery, 1);
                        DeleteItem1(talker, @q_blood_of_eva, OwnItemCount(talker, @q_blood_of_eva));
                        DeleteItem1(talker, @q_antidote_recipe_list, OwnItemCount(talker, @q_antidote_recipe_list));
                        DeleteItem1(talker, @q_herb_of_oel_mahum, OwnItemCount(talker, @q_herb_of_oel_mahum));
                        DeleteItem1(talker, @q_herb_of_breka, OwnItemCount(talker, @q_herb_of_breka));
                        DeleteItem1(talker, @q_herb_of_vanor, OwnItemCount(talker, @q_herb_of_vanor));
                        SetMemoState(talker, @pledge_of_blood, 6);
                    }
                }

                break;
            case 5:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) == 1 && (GetMemoState(talker, @pledge_of_blood) == 3 || GetMemoState(talker, @pledge_of_blood) == 4 || GetMemoState(talker, @pledge_of_blood) == 5) && GetAbnormalLevel(talker, @ab_fatal_poison) == -1)
                {
                    ShowPage(talker, "witch_kalis_q0501_09.htm");
                    SetMemoState(talker, @pledge_of_blood, 1);
                    DeleteItem1(talker, @q_antidote_recipe_list, OwnItemCount(talker, @q_antidote_recipe_list));
                }

                break;
            case 6:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) && GetMemoState(talker, @pledge_of_blood) < 6 && GetMemoState(talker, @pledge_of_blood) >= 3 && (OwnItemCount(talker, @q_blood_of_eva) == 0 || OwnItemCount(talker, @q_herb_of_vanor) == 0 || OwnItemCount(talker, @q_herb_of_breka) == 0 || OwnItemCount(talker, @q_herb_of_oel_mahum) == 0) && GetAbnormalLevel(talker, @ab_fatal_poison) == 1)
                {
                    ShowPage(talker, "witch_kalis_q0501_10.htm");
                }

                break;
            case 7:
                if (_from_choice == 0 || HaveMemo(talker, @pledge_of_blood) && GetMemoState(talker, @pledge_of_blood) == 6)
                {
                    ShowPage(talker, "witch_kalis_q0501_11.htm");
                }

                break;
            case 8:
                if (_from_choice == 0 || HaveMemo(Pledge_GetLeader(talker), @pledge_of_blood) && HaveMemo(talker, @pledge_of_blood) == 0)
                {
                    if (talker.is_pledge_master == @FALSE)
                    {
                        ShowPage(talker, "witch_kalis_q0501_12.htm");
                    }
                }

                break;
            }

            return;
        }

        super;
    }

    EventHandler TIMER_FIRED_EX(timer_id)
    {
        if (timer_id == 250303)
        {
            Despawn();
        }

        super;
    }

    EventHandler CREATED(i0)
    {
        if (myself.sm.param2 == 50302)
        {
            Say(MakeFString(50341, "", "", "", "", ""));
            AddTimerEx(250303, 1000 * 5);
        }

        super;
    }

    EventHandler MENU_SELECTED(ask, reply, talker)
    {
        if (ask == @pledge_seeks_ambition)
        {
        }

        if (ask == @pledge_of_blood)
        {
            if (reply == 1)
            {
                ShowPage(talker, "witch_kalis_q0501_02.htm");
            }
            else if (reply == 2)
            {
                ShowPage(talker, "witch_kalis_q0501_03.htm");
                SetMemoState(talker, @pledge_of_blood, 2);
                SetJournal(talker, @pledge_of_blood, 2);
            }
            else if (reply == 3)
            {
                ShowPage(talker, "witch_kalis_q0501_04.htm");
            }
            else if (reply == 4)
            {
                if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                {
                    talker.quest_last_reward_time = GetCurrentTick();
                    ShowPage(talker, "witch_kalis_q0501_07.htm");
                    DeleteItem1(talker, @q_symbol_of_loyalty, OwnItemCount(talker, @q_symbol_of_loyalty));
                    GiveItem1(talker, @q_antidote_recipe_list, 1);
                    AddUseSkillDesire(talker, @s_quest_fatal_poison, @ST_ATTACK, @AMT_STAND, 1000000);
                    SetMemoState(talker, @pledge_of_blood, 3);
                    SetJournal(talker, @pledge_of_blood, 3);
                }
            }
        }

        super;
    }
}

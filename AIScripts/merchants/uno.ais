class uno : merchant
{
property:
    BuySellList SellList0 = {
        {"small_sword"; 15};
        {"club"; 15};
        {"bone_dagger"; 15};
        {"short_bow"; 15};
        {"broad_sword"; 15};
        {"heavy_chisel"; 15};
        {"knife"; 15};
        {"doomed_dagger"; 15};
        {"bow"; 15};
        {"mace"; 15};
        {"sickle"; 15};
        {"brandish"; 15};
        {"gladius"; 15};
        {"orcish_sword"; 15};
        {"handmade_sword"; 15};
        {"dwarven_mace"; 15};
        {"dirk"; 15};
        {"hunting_bow"; 15};
        {"long_sword"; 15};
        {"throw_knife"; 15};
        {"bow_of_forest"; 15};
        {"short_spear"; 15};
        {"pants"; 15};
        {"shirt"; 15};
        {"leather_pants"; 15};
        {"leather_shirt"; 15};
        {"hard_leather_pants"; 15};
        {"wooden_breastplate"; 15};
        {"wooden_gaiters"; 15};
        {"tights_pants"; 15};
        {"tights_shirt"; 15};
        {"bone_breastplate"; 15};
        {"bone_gaiters"; 15};
        {"leather_shield"; 15};
        {"small_shield"; 15};
        {"buckler"; 15};
        {"round_shield"; 15};
        {"short_gloves"; 15};
        {"short_leather_gloves"; 15};
        {"gloves"; 15};
        {"leather_gloves"; 15};
        {"apprentice's_shoes"; 15};
        {"cloth_shoes"; 15};
        {"leather_sandals"; 15};
        {"crude_leather_shoes"; 15};
        {"cotton_shoes"; 15};
        {"leather_shoes"; 15};
        {"low_boots"; 15};
        {"cloth_cap"; 15};
        {"leather_cap"; 15};
        {"wooden_helmet"; 15};
        {"leather_helmet"; 15};
        {"wooden_arrow"; 15};
        {"bone_arrow"; 15}
    };
    BuySellList SellList1 = {
        {"apprentice's_rod"; 15};
        {"buffalo_horn"; 15};
        {"willow_staff"; 15};
        {"apprentice's_spellbook"; 15};
        {"cedar_staff"; 15};
        {"apprentice's_staff"; 15};
        {"relic_of_saints"; 15};
        {"hose"; 15};
        {"tunic"; 15};
        {"cotton_hose"; 15};
        {"cotton_tunic"; 15};
        {"feriotic_hose"; 15};
        {"feriotic_tunic"; 15};
        {"leather_hose"; 15};
        {"leather_tunic"; 15};
        {"hose_of_devotion"; 15};
        {"tunic_of_devotion"; 15};
        {"leather_shield"; 15};
        {"small_shield"; 15};
        {"buckler"; 15};
        {"round_shield"; 15};
        {"short_gloves"; 15};
        {"short_leather_gloves"; 15};
        {"gloves"; 15};
        {"leather_gloves"; 15};
        {"apprentice's_shoes"; 15};
        {"cloth_shoes"; 15};
        {"leather_sandals"; 15};
        {"crude_leather_shoes"; 15};
        {"cotton_shoes"; 15};
        {"leather_shoes"; 15};
        {"low_boots"; 15};
        {"cloth_cap"; 15};
        {"leather_cap"; 15};
        {"wooden_helmet"; 15};
        {"leather_helmet"; 15};
        {"wooden_arrow"; 15};
        {"bone_arrow"; 15}
    };
    
handler:
    EventHandler TALK_SELECTED(fhtml0, talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @silvery_spidersilk) != 0)
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Hand over the silver spider web");
            }

            if (HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @unos_receipt) != 0)
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Ask again about the nightshade leaf");
            }

            if (HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @nightshade_leaf) != 0)
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Show the nightshade leaf");
            }

            if (HaveMemo(talker, @curse_of_fortress) == 0 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 3;
                AddChoice(3, "Speak about the elves' underground stronghold");
            }

            if (HaveMemo(talker, @curse_of_fortress) == 0 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 1)
            {
                _choiceN = _choiceN + 1;
                _code = 4;
                AddChoice(4, "Speak about the elves' underground stronghold");
            }

            if (HaveMemo(talker, @curse_of_fortress) == 1 && OwnItemCount(talker, @elf_skull) + OwnItemCount(talker, @bone_fragment3) < 13)
            {
                _choiceN = _choiceN + 1;
                _code = 5;
                AddChoice(5, "Speak about the elves' underground stronghold");
            }

            if (HaveMemo(talker, @curse_of_fortress) == 1 && OwnItemCount(talker, @elf_skull) + OwnItemCount(talker, @bone_fragment3) >= 13 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 6;
                AddChoice(6, "Deliver the piece of bone");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @silvery_spidersilk) != 0)
                {
                    DeleteItem1(talker, @silvery_spidersilk, OwnItemCount(talker, @silvery_spidersilk));
                    if (OwnItemCount(talker, @unos_receipt) == 0)
                    {
                        GiveItem1(talker, @unos_receipt, 1);
                    }

                    ShowPage(talker, "uno_q0311_01.htm");
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @unos_receipt) != 0)
                {
                    ShowPage(talker, "uno_q0311_02.htm");
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @nerupas_favor) != 0 && OwnItemCount(talker, @nightshade_leaf) != 0)
                {
                    ShowPage(talker, "uno_q0311_03.htm");
                }

                break;
            case 3:
                if (_from_choice == 0 || HaveMemo(talker, @curse_of_fortress) == 0 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 0)
                {
                    if (GetMemoCount(talker) < 16)
                    {
                        if (talker.race == @race_dark_elf)
                        {
                            ShowPage(talker, "uno_q0314_00.htm");
                        }
                        else if (talker.level >= 12)
                        {
                            ShowPage(talker, "uno_q0314_02.htm");
                        }
                        else
                        {
                            ShowPage(talker, "uno_q0314_01.htm");
                        }
                    }
                    else
                    {
                        ShowPage(talker, "fullquest.htm");
                    }
                }

                break;
            case 4:
                if (_from_choice == 0 || HaveMemo(talker, @curse_of_fortress) == 0 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 1)
                {
                    ShowPage(talker, "finishedquest.htm");
                }

                break;
            case 5:
                if (_from_choice == 0 || HaveMemo(talker, @curse_of_fortress) == 1 && OwnItemCount(talker, @elf_skull) + OwnItemCount(talker, @bone_fragment3) < 13)
                {
                    ShowPage(talker, "uno_q0314_05.htm");
                }

                break;
            case 6:
                if (_from_choice == 0 || HaveMemo(talker, @curse_of_fortress) == 1 && OwnItemCount(talker, @elf_skull) + OwnItemCount(talker, @bone_fragment3) >= 13 && GetOneTimeQuestFlag(talker, @curse_of_fortress) == 0)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        ShowPage(talker, "uno_q0314_06.htm");
                        GiveItem1(talker, @bone_shield, 1);
                        IncrementParam(talker, @PARAM_EXP, 2000);
                        DeleteItem1(talker, @elf_skull, OwnItemCount(talker, @elf_skull));
                        DeleteItem1(talker, @bone_fragment3, OwnItemCount(talker, @bone_fragment3));
                        RemoveMemo(talker, @curse_of_fortress);
                        SoundEffect(talker, "ItemSound.quest_finish");
                        SetOneTimeQuestFlag(talker, @curse_of_fortress, 1);
                    }
                }

                break;
            }

            return;
        }

        super;
    }

    EventHandler QUEST_ACCEPTED(quest_id, talker)
    {
        if (quest_id == @curse_of_fortress)
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                SetMemo(talker, quest_id);
                SoundEffect(talker, "ItemSound.quest_accept");
                ShowPage(talker, "uno_q0314_04.htm");
            }

            return;
        }

        super;
    }

    EventHandler MENU_SELECTED(ask, fhtml0, quest_id, reply, talker)
    {
        if (ask == @curse_of_fortress)
        {
            if (reply == 1)
            {
                FHTML_SetFileName(fhtml0, "uno_q0314_03.htm");
                FHTML_SetInt(fhtml0, "quest_id", @curse_of_fortress);
                ShowFHTML(talker, fhtml0);
            }
        }

        super;
    }
}

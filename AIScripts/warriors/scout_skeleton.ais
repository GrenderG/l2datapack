class scout_skeleton : warrior_passive_use_bow
{
handler:
    EventHandler MY_DYING(c1, i0)
    {
        c1 = GetLastAttacker();
        if (HaveMemo(myself.c_quest0, @path_to_darkwizard) == 1 && OwnItemCount(myself.c_quest0, @hub_scent) == 1 && myself.i_quest0 == 1 && OwnItemCount(myself.c_quest0, @heart_of_lunacy) < 3)
        {
            if (Rand(2) == 0)
            {
                GiveItem1(myself.c_quest0, @heart_of_lunacy, 1);
                if (OwnItemCount(myself.c_quest0, @heart_of_lunacy) == 3)
                {
                    SoundEffect(myself.c_quest0, "ItemSound.quest_middle");
                }
                else
                {
                    SoundEffect(myself.c_quest0, "ItemSound.quest_itemget");
                }
            }
        }

        c1 = GetLastAttacker();
        if (HaveMemo(myself.c_quest0, @path_to_elven_knight) != 0 && OwnItemCount(myself.c_quest0, @kluto_box) == 0 && OwnItemCount(myself.c_quest0, @topaz_piece) < 20 && myself.i_quest0 == 1 && Rand(100) < 70)
        {
            GiveItem1(myself.c_quest0, @topaz_piece, 1);
            if (OwnItemCount(myself.c_quest0, @topaz_piece) == 20)
            {
                SoundEffect(myself.c_quest0, "ItemSound.quest_middle");
            }
            else
            {
                SoundEffect(myself.c_quest0, "ItemSound.quest_itemget");
            }
        }

        c1 = GetLastAttacker();
        if (HaveMemo(myself.c_quest2, @path_to_rogue) && OwnItemCount(myself.c_quest2, @spatois_bones) < 10 && myself.i_quest2 == 1 && Rand(10) < 2)
        {
            GiveItem1(myself.c_quest2, @spatois_bones, 1);
            if (OwnItemCount(myself.c_quest2, @spatois_bones) == 10)
            {
                SoundEffect(myself.c_quest2, "ItemSound.quest_middle");
            }
            else
            {
                SoundEffect(myself.c_quest2, "ItemSound.quest_itemget");
            }
        }

        c1 = GetLastAttacker();
        if (OwnItemCount(c1, @anatomy_diagram) && HaveMemo(c1, @grim_collector))
        {
            i0 = Rand(100);
            if (1)
            {
                c1.quest_last_reward_time = GetCurrentTick();
                if (i0 < 9)
                {
                    GiveItem1(c1, @skull1, 1);
                    SoundEffect(c1, "ItemSound.quest_itemget");
                }
                else if (i0 < 59)
                {
                    GiveItem1(c1, @spine1, 1);
                    SoundEffect(c1, "ItemSound.quest_itemget");
                }
                else if (i0 < 77)
                {
                    GiveItem1(c1, @arm_bone1, 1);
                    SoundEffect(c1, "ItemSound.quest_itemget");
                }
                else if (i0 < 97)
                {
                    GiveItem1(c1, @thigh_bone1, 1);
                    SoundEffect(c1, "ItemSound.quest_itemget");
                }
            }
        }

        super;
    }

    EventHandler ATTACKED(attacker, damage, weapon_class_id)
    {
        select (myself.i_quest0)
        {
        case 0:
            myself.i_quest0 = 1;
            myself.c_quest0 = attacker;
            break;
        case 1:
            if (myself.c_quest0 != attacker)
            {
                myself.i_quest0 = 2;
            }

            break;
        case 2:
            break;
        }

        select (myself.i_quest0)
        {
        case 0:
            myself.c_quest0 = attacker;
            myself.i_quest0 = 1;
            break;
        case 1:
            if (myself.c_quest0 != attacker)
            {
                myself.i_quest0 = 2;
            }

            break;
        case 2:
            break;
        }

        select (myself.i_quest2)
        {
        case 0:
            myself.c_quest2 = attacker;
            if (myself.c_quest2.equiped_weapon_class_id != @netis_bow && myself.c_quest2.equiped_weapon_class_id != @netis_dagger)
            {
                myself.i_quest2 = 2;
            }
            else
            {
                myself.i_quest2 = 1;
            }

            break;
        case 1:
            if (myself.c_quest2.equiped_weapon_class_id != @netis_bow && myself.c_quest2.equiped_weapon_class_id != @netis_dagger)
            {
                myself.i_quest2 = 2;
            }

            if (myself.c_quest2 != attacker)
            {
                myself.i_quest2 = 2;
            }

            break;
        case 2:
            break;
        }

        super;
    }
}

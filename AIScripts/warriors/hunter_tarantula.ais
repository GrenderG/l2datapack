class hunter_tarantula : warrior_passive
{
handler:
    EventHandler MY_DYING(c1, i5)
    {
        c1 = GetLastAttacker();
        if (HaveMemo(myself.c_quest0, @path_to_scavenger) == 1 && OwnItemCount(myself.c_quest0, @tarantula_pic) == 1 && OwnItemCount(myself.c_quest0, @bead) < 20 && myself.i_quest0 == 2)
        {
            if (Rand(2) == 0)
            {
                if (OwnItemCount(myself.c_quest0, @bead) == 19)
                {
                    GiveItem1(myself.c_quest0, @bead, 1);
                    SoundEffect(myself.c_quest0, "ItemSound.quest_middle");
                }
                else
                {
                    GiveItem1(myself.c_quest0, @bead, 1);
                    SoundEffect(myself.c_quest0, "ItemSound.quest_itemget");
                }
            }
        }

        c1 = GetLastAttacker();
        if (HaveMemo(c1, @silk_of_tarantula))
        {
            i5 = Rand(100);
            if (i5 > 95)
            {
                GiveItem1(c1, @tarantula_spinnerette, 1);
                SoundEffect(c1, "ItemSound.quest_itemget");
            }
            else if (i5 > 45)
            {
                GiveItem1(c1, @tarantula_spider_silk, 1);
                SoundEffect(c1, "ItemSound.quest_itemget");
            }
        }

        myself.c_quest1.quest_last_reward_time = 0;
        if (HaveMemo(myself.c_quest1, @get_a_pet) == 1 && OwnItemCount(myself.c_quest1, @animal_slayer_list5) == 1 && myself.i_quest1 == 1)
        {
            if (OwnItemCount(myself.c_quest1, @bloody_tarantula_nail) < 50 && Rand(100) < 75)
            {
                GiveItem1(myself.c_quest1, @bloody_tarantula_nail, 1);
                if (OwnItemCount(myself.c_quest1, @bloody_tarantula_nail) >= 50)
                {
                    SoundEffect(myself.c_quest1, "ItemSound.quest_middle");
                }
                else
                {
                    SoundEffect(myself.c_quest1, "ItemSound.quest_itemget");
                }
            }
        }

        super;
    }

    EventHandler ATTACKED(attacker, damage, skill_name_id)
    {
        select (myself.i_quest0)
        {
        case 0:
            myself.i_quest0 = 1;
            myself.c_quest0 = attacker;
            if (skill_name_id / 256 == @s_spoil1 / 256)
            {
                myself.i_quest0 = 2;
            }

            break;
        case 1:
            if (skill_name_id / 256 == @s_spoil1 / 256)
            {
                myself.i_quest0 = 2;
            }

            break;
        case 2:
            break;
        }

        select (myself.i_quest1)
        {
        case 0:
            myself.i_quest1 = 1;
            myself.c_quest1 = attacker;
            break;
        case 1:
            if (myself.c_quest1 != attacker)
            {
                myself.i_quest1 = 2;
            }

            break;
        case 2:
            break;
        }

        super;
    }
}

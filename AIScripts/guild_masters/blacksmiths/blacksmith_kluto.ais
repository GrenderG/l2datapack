class blacksmith_kluto : blacksmith
{
handler:
    EventHandler TALK_SELECTED(talker)
    {
        if (_from_choice == 0)
        {
            if (HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @sorius_letter1) != 0)
            {
                _choiceN = _choiceN + 1;
                _code = 0;
                AddChoice(0, "Show the letter of Sorius");
            }

            if (HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 1;
                AddChoice(1, "Ask about Ol Mahum again");
            }

            if (HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) > 0 && OwnItemCount(talker, @emerald_piece) < 20)
            {
                _choiceN = _choiceN + 1;
                _code = 2;
                AddChoice(2, "Ask about Ol Mahum again");
            }

            if (HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) >= 20)
            {
                _choiceN = _choiceN + 1;
                _code = 3;
                AddChoice(3, "Show the Emerald piece");
            }

            if (HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) != 0)
            {
                _choiceN = _choiceN + 1;
                _code = 4;
                AddChoice(4, "Display Kluto's box");
            }

            if (HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @footprint) == 0 && OwnItemCount(talker, @klutos_letter) == 0 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) == 0 && OwnItemCount(talker, @secret_box2) == 0)
            {
                _choiceN = _choiceN + 1;
                _code = 5;
                AddChoice(5, "Show 1st pass");
            }

            if (HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @pass_1st) && (OwnItemCount(talker, @klutos_letter) || OwnItemCount(talker, @footprint)))
            {
                _choiceN = _choiceN + 1;
                _code = 6;
                AddChoice(6, "Ask about Blacksmith Pinter");
            }

            if (HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) && OwnItemCount(talker, @secret_box2))
            {
                _choiceN = _choiceN + 1;
                _code = 7;
                AddChoice(7, "Show 2nd pass and secret box");
            }

            if (_choiceN > 1)
            {
                ShowChoicePage(talker, 1);
                return;
            }
        }

        if (_from_choice || _choiceN == 1)
        {
            select (_code)
            {
            case 0:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @sorius_letter1) != 0)
                {
                    ShowPage(talker, "blacksmith_kluto_q0406_01.htm");
                }

                break;
            case 1:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) == 0)
                {
                    ShowPage(talker, "blacksmith_kluto_q0406_03.htm");
                }

                break;
            case 2:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) > 0 && OwnItemCount(talker, @emerald_piece) < 20)
                {
                    ShowPage(talker, "blacksmith_kluto_q0406_04.htm");
                }

                break;
            case 3:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) == 0 && OwnItemCount(talker, @topaz_piece) >= 20 && OwnItemCount(talker, @kluto_memo) != 0 && OwnItemCount(talker, @emerald_piece) >= 20)
                {
                    if (GetCurrentTick() - talker.quest_last_reward_time > 1)
                    {
                        talker.quest_last_reward_time = GetCurrentTick();
                        DeleteItem1(talker, @emerald_piece, OwnItemCount(talker, @emerald_piece));
                        DeleteItem1(talker, @topaz_piece, OwnItemCount(talker, @topaz_piece));
                        if (OwnItemCount(talker, @kluto_box) == 0)
                        {
                            GiveItem1(talker, @kluto_box, 1);
                            DeleteItem1(talker, @kluto_memo, 1);
                        }

                        ShowPage(talker, "blacksmith_kluto_q0406_05.htm");
                    }
                }

                break;
            case 4:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_elven_knight) != 0 && OwnItemCount(talker, @kluto_box) != 0)
                {
                    ShowPage(talker, "blacksmith_kluto_q0406_06.htm");
                }

                break;
            case 5:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @footprint) == 0 && OwnItemCount(talker, @klutos_letter) == 0 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) == 0 && OwnItemCount(talker, @secret_box2) == 0)
                {
                    ShowPage(talker, "blacksmith_kluto_q0418_01.htm");
                }

                break;
            case 6:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @pass_1st) && (OwnItemCount(talker, @klutos_letter) || OwnItemCount(talker, @footprint)))
                {
                    ShowPage(talker, "blacksmith_kluto_q0418_08.htm");
                }

                break;
            case 7:
                if (_from_choice == 0 || HaveMemo(talker, @path_to_artisan) == 1 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) && OwnItemCount(talker, @secret_box2))
                {
                    ShowPage(talker, "blacksmith_kluto_q0418_09.htm");
                }

                break;
            }

            return;
        }

        super;
    }

    EventHandler MENU_SELECTED(ask, reply, talker)
    {
        if (ask == @path_to_elven_knight && reply == 1)
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                if (HaveMemo(talker, @path_to_elven_knight) != 0)
                {
                    DeleteItem1(talker, @sorius_letter1, OwnItemCount(talker, @sorius_letter1));
                    if (OwnItemCount(talker, @kluto_memo) == 0)
                    {
                        GiveItem1(talker, @kluto_memo, 1);
                    }

                    ShowPage(talker, "blacksmith_kluto_q0406_02.htm");
                }
            }
        }

        if (ask == @path_to_artisan && reply == 1)
        {
            ShowPage(talker, "blacksmith_kluto_q0418_02.htm");
        }

        if (ask == @path_to_artisan && reply == 2)
        {
            ShowPage(talker, "blacksmith_kluto_q0418_05.htm");
        }

        if (ask == @path_to_artisan && reply == 3)
        {
            ShowPage(talker, "blacksmith_kluto_q0418_03.htm");
        }

        if (ask == @path_to_artisan && reply == 4)
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                ShowPage(talker, "blacksmith_kluto_q0418_04.htm");
                GiveItem1(talker, @klutos_letter, 1);
            }
        }

        if (ask == @path_to_artisan && reply == 5)
        {
            ShowPage(talker, "blacksmith_kluto_q0418_06.htm");
        }

        if (ask == @path_to_artisan && reply == 6)
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                ShowPage(talker, "blacksmith_kluto_q0418_07.htm");
                GiveItem1(talker, @klutos_letter, 1);
            }
        }

        if (ask == @path_to_artisan && reply == 7 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) && OwnItemCount(talker, @secret_box2))
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                ShowPage(talker, "blacksmith_kluto_q0418_10.htm");
                DeleteItem1(talker, @pass_1st, 1);
                DeleteItem1(talker, @pass_2nd, 1);
                DeleteItem1(talker, @secret_box2, 1);
                GiveItem1(talker, @pass_final, 1);
                RemoveMemo(talker, @path_to_artisan);
                SoundEffect(talker, "ItemSound.quest_finish");
            }
        }

        if (ask == @path_to_artisan && reply == 8)
        {
            ShowPage(talker, "blacksmith_kluto_q0418_11.htm");
        }

        if (ask == @path_to_artisan && reply == 9 && OwnItemCount(talker, @pass_1st) && OwnItemCount(talker, @pass_2nd) && OwnItemCount(talker, @secret_box2))
        {
            if (GetCurrentTick() - talker.quest_last_reward_time > 1)
            {
                talker.quest_last_reward_time = GetCurrentTick();
                ShowPage(talker, "blacksmith_kluto_q0418_12.htm");
                DeleteItem1(talker, @pass_1st, 1);
                DeleteItem1(talker, @pass_2nd, 1);
                DeleteItem1(talker, @secret_box2, 1);
                GiveItem1(talker, @pass_final, 1);
                RemoveMemo(talker, @path_to_artisan);
                SoundEffect(talker, "ItemSound.quest_finish");
            }
        }

        super;
    }
}
